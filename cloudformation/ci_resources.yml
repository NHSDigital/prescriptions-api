AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  SubjectClaimFilters:
    Type: CommaDelimitedList
    Default: "repo:NHSDigital/prescriptions-api:*"
    Description: >
      Subject claim filter for valid tokens.
      Default allows only pull requests of the NHSDigital/prescriptions-api to assume the role.
      See https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect#example-subject-claims
      for examples of filtering by branch or deployment environment.

Resources:
  GitHubIdentityProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1
      ClientIdList:
        - sts.amazonaws.com

  CloudFormationDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !GetAtt GitHubIdentityProvider.Arn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              StringLike:
                token.actions.githubusercontent.com:sub: !Ref SubjectClaimFilters
      Policies:
        - PolicyName: CreateCloudFormationStack
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:ListExports"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:DescribeStackEvents"
                  - "cloudformation:GetTemplateSummary"
                Resource: "*"
        - PolicyName: AssumeExecutionRole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource: !GetAtt CloudFormationExecutionRole.Arn
        - PolicyName: UseArtifactBucketKMSKey
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "kms:DescribeKey"
                  - "kms:GenerateDataKey*"
                  - "kms:Encrypt"
                  - "kms:ReEncrypt*"
                  - "kms:Decrypt"
                Resource: !GetAtt ArtifactsBucketKMSKey.Arn

  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: ManagedStackSource
          Value: AwsSamCli
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action:
              - "sts:AssumeRole"
      # see https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html for permissions
      Policies:
        - PolicyName: GrantCloudFormationDeployAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "cloudformation:CreateChangeSet"
                  - "iam:Attach*"
                  - "iam:Create*"
                  - "iam:Delete*"
                  - "iam:Detach*"
                  - "iam:Get*"
                  - "iam:List*"
                  - "iam:Put*"
                  - "iam:Remove*"
                  - "iam:Tag*"
                  - "iam:Untag*"
                  - "iam:Update*"
                  - "iam:PassRole"
                  - "logs:AssociateKmsKey"
                  - "logs:DisassociateKmsKey"
                  - "logs:CreateLogGroup"
                  - "logs:DeleteLogGroup"
                  - "logs:TagLogGroup"
                  - "logs:PutRetentionPolicy"
                  - "logs:DeleteRetentionPolicy"
                  - "lambda:Add*"
                  - "lambda:CreateFunction"
                  - "lambda:Delete*"
                  - "lambda:Get*"
                  - "lambda:List*"
                  - "lambda:Publish*"
                  - "lambda:Put*"
                  - "lambda:Remove*"
                  - "lambda:Tag*"
                  - "lambda:Untag*"
                  - "lambda:Update*"
                  - "kms:Create*"
                  - "kms:Delete*"
                  - "kms:Describe*"
                  - "kms:Get*"
                  - "kms:List*"
                  - "kms:Put*"
                  - "kms:ScheduleKeyDeletion*"
                  - "kms:Tag*"
                  - "kms:Untag*"
                  - "kms:Update*"
                  - "apigateway:DELETE"
                  - "apigateway:GET"
                  - "apigateway:POST"
                  - "apigateway:PATCH"
                  - "apigateway:PUT"
                  - "s3:CreateBucket"
                Resource: "*"

  # KMS S3 encryption key
  ArtifactsBucketKMSKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join
                - ""
                - - "arn:aws:iam::"
                  - !Ref "AWS::AccountId"
                  - ":root"
            Action: "kms:*"
            Resource: "*"
  ArtifactsBucketKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/ArtifactsBucketKMSKeyAlias
      TargetKeyId:
        Ref: ArtifactsBucketKMSKey

  ArtifactsBucket:
    Type: AWS::S3::Bucket
    # TODO uncomment this once happy with everything
    # DeletionPolicy: "Retain"
    Properties:
      Tags:
        - Key: ManagedStackSource
          Value: AwsSamCli
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${ArtifactsBucketKMSKeyAlias}"
              SSEAlgorithm: "aws:kms"

  ArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactsBucket
      PolicyDocument:
        Statement:
          - Effect: "Deny"
            Action: "s3:*"
            Principal: "*"
            Resource:
              - !Join ["", [!GetAtt ArtifactsBucket.Arn, "/*"]]
              - !GetAtt ArtifactsBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: "Allow"
            Action:
              - "s3:GetObject*"
              - "s3:PutObject*"
              - "s3:GetBucket*"
              - "s3:List*"
            Resource:
              - !Join ["", [!GetAtt ArtifactsBucket.Arn, "/*"]]
              - !GetAtt ArtifactsBucket.Arn
            Principal:
              AWS:
                - !GetAtt CloudFormationDeployRole.Arn
                - !GetAtt CloudFormationExecutionRole.Arn

Outputs:
  CloudFormationDeployRole:
    Description: ARN of the IAM Role(CloudFormationDeployRole)
    Value: !GetAtt CloudFormationDeployRole.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CloudFormationDeployRole"]]
  CloudFormationExecutionRole:
    Description: ARN of the IAM Role(CloudFormationExecutionRole)
    Value: !GetAtt CloudFormationExecutionRole.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CloudFormationExecutionRole"]]
  ArtifactsBucket:
    Description: ARN of the Artifacts bucket
    Value: !GetAtt ArtifactsBucket.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ArtifactsBucket"]]
